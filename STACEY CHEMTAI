import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import joblib

# Load your dataset (replace 'your_dataset.csv' with your actual dataset)
data = pd.read_csv('your_dataset.csv')
# Define the dependent and independent variables
X = data[['Weather', 'Road_Condition', 'Speed_Limit']]
y = data['Accident_Severity']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Absolute Error: {mae}')
print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')
joblib.dump(model, 'accident_severity_model.pkl')
new_data = pd.DataFrame({'Weather': ['Clear'], 'Road_Condition': ['Dry'], 'Speed_Limit': [50]})

# Load the saved model
loaded_model = joblib.load('accident_severity_model.pkl')

# Predict accident severity
severity_prediction = loaded_model.predict(new_data)

print(f'Predicted Accident Severity: {severity_prediction[0]}')
